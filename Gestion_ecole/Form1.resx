<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAfQAAAH0CAYAAADL1t+KAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAAADt0RVh0Q29tbWVudAB4cjpkOkRBR0JHcmJ2a2pNOjIsajoyMDY2NDQ5NzUzMzAy
        ODk3Mjg5LHQ6MjQwMzMxMTgd+jYsAAAZyUlEQVR4Xu3dDcxWZf3A8caQkVOQDSM150uyUGdGzMxCmYBL
        ZRLaGzC3ohcS2/KlUiwtCzLR9D8r7EXTaS8zRWvZVo6YzMqm1ESdw5csjUyaTS3IAqHz37l33MIuNfG5
        zvWc3/l8tt9a+Tz3+V08xNfn4b7P/aoKAOg8QQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEg
        AEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQAC
        EHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAA
        QQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQ
        dAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABB
        B4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0
        AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEH
        gAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQA
        CEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeA
        AAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAI
        QNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AA
        BB0AAhB0snrqqaeMMc1AToJONv/617+qV73qVcaYZv797383/++AoSfoZCPoxmw/gk5Ogk42gm7M9iPo
        5CToZCPoxmw/gk5Ogk42gm7M9iPo5CToZPNCQR83blw1bdo0Y8LOmDFjkr/3BZ2cBJ1sXijo73jHO5qP
        gJje9ra3JX/vCzo5CTrZCDp9JeiUIOhkI+j0laBTgqCTjaDTV4JOCYJONoJOXwk6JQg62Qg6fSXolCDo
        ZCPo9JWgU4Kgk42g01eCTgmCTjaCTl8JOiUIOtkIOn0l6JQg6GQj6PSVoFOCoJONoNNXgk4Jgk42gk5f
        CTolCDrZCDp9JeiUIOhkI+j0laBTgqCTjaDTV4JOCYJONoJOXwk6JQg62Qg6fSXolCDoZCPo9JWgU4Kg
        k42g01eCTgmCTjaCTl8JOiUIOtkIOn0l6JQg6GQj6PSVoFOCoJONoNNXgk4Jgk42gk5fCTolCDrZCDp9
        JeiUIOhkI+j0laBTgqCTjaDTV4JOCYJONoJOXwk6JQg62Qg6fSXolCDoZCPo9JWgU4Kgk42g01eCTgmC
        TjaCTl8JOiUIOtkIOn0l6JQg6GQj6PSVoFOCoJONoNNXgk4Jgk42gk5fCTolCDrZCDp9JeiUIOhkI+j0
        laBTgqCTjaDTV4JOCYJONn0P+l/+8pfq2muvrc4444xqzpw5gz/k3/zmN1eHHXZYNX369Gru3LnVmWee
        WV166aXVTTfdVD344IPVtm3bms+mywSdEgSdbPoa9Pvvv38Q69GjRyfP/2IzduzY6sgjj6yWLFlS3Xff
        fc0j0jWCTgmCTjZ9DPry5curXXbZJXnuHZmpU6dW3/ve96qtW7c2V6ALBJ0SBJ1s+hb0Cy+8MHneoZgp
        U6ZUv/rVr5orMdwJOiUIOtn0Kejf+c53kmcdyhk5cmT12c9+1nfrHSDolCDoZNOXoP/ud7+rxo0blzxr
        jpk9e3a1adOm5uoMR4JOCYJONn0J+vHHH588Z86ZNm1a9fe//73ZYHh4+umnq+uvv776zGc+U5100knV
        0UcfPfirgiOOOGLwNZ8/f371iU98orrkkkuq6667rrrnnnuqZ599tvnsWASdEgSdbPoQ9B/+8IfJM7Yx
        Rx111CCipT311FODl9/tuuuuyT1fbHbeeedB8M8555zqtttuCxM8QacEQSeb6EGv/3CePHly8oxtTf2d
        eskfv69du7aaOHFicrcdmQMPPLC67LLLBr93ukzQKUHQySZ60Et+d/6fc8IJJxR5otxdd91VjR8/PrnT
        K52DDjqouvXWW5srdY+gU4Kgk030oM+YMSN5vhLzsY99rNmqHfVd8PbZZ5/kLkM1o0aNqq688srmit0i
        6JQg6GQTOej13eBSZys5F198cbNdfvUz7VM7DPWMGDGi+ulPf9pctTsEnRIEnWwiB33x4sXJs5WcOn4r
        VqxoNsznOy285v4/55BDDmmu3B2CTgmCTjZRg17/fXXuHzfv6NS3nb3zzjubTYde/VK5vffeO3ntnFM/
        +a5LBJ0SBJ1sogb9lltuSZ5ruMwBBxxQ/fWvf222HVpLly5NXjP31Pez7xJBpwRBJ5uoQf/ABz6QPNdw
        mlmzZg35W7H+7W9/q17zmtckr5d7rrjiimaLbhB0ShB0sokY9PrOZrvvvnvyXMNtzj///GbroVG/b3vq
        Om3MD37wg2aLbhB0ShB0sokY9FWrViXPNBxnKJ8hXn+3P2nSpOR12pjf/OY3zSbdIOiUIOhkEzHoZ5xx
        RvJMw3UmTJhQ/eEPf2i233H1vxikHr+NqW8pu3nz5maTbhB0ShB0sokY9PoOZqkzDec58sgjX/GboMyb
        Ny/52G3Mcccd12zRHYJOCYJONtGC/sgjjyTP04X59Kc/3Zzi5XvyyScHb6KSetw2ZtmyZc0m3SHolCDo
        ZBMt6FdddVXyPF2Y+u/TV65c2Zzk5fnWt76VfMy2Zs2aNc0m3SHolCDoZBMt6O9///uT5+nKvO51r6s2
        bNjQnOZ/V+L93p+b+jkAQ/3yuzYIOiUIOtlEC/p+++2XPE+Xpn59+suJSv1+66NHj04+Vhszd+7cZpNu
        EXRKEHSyiRT0Rx99NHmWLs6Xv/zl5lQv7fvf/37yMdqab37zm80m3SLolCDoZBMp6PWNTVJn6eK8+tWv
        ru6+++7mZC9uwYIFycdoax566KFmk24RdEoQdLKJFPSuvf78pWbKlCmDr89L2XfffZOf38bU96TvKkGn
        BEEnm0hBnzp1avIsXZ6zzz67OV3afffdl/y8tmbhwoXNJt0j6JQg6GQTJej1TVnqtyVNnaXLM3LkyGr1
        6tXNKf/b5Zdfnvy8tuaaa65pNukeQacEQSebKEG/9957k+eIMBMnThy8i1rKySefnPyctmbdunXNJt0j
        6JQg6GQTJejf/e53k+eIMh/+8Iebk26v/jvs1Me3MePHj+90/ASdEgSdbKIE/ayzzkqeI9I8/13ZHnvs
        seTHtTVdvH/7fxJ0ShB0sokS9GOPPTZ5jkiz//77b/ej9xUrViQ/rq0577zzmk26SdApQdDJJkrQ99hj
        j+Q5os2iRYuaE1eDN3NJfUxb8+Mf/7jZpJsEnRIEnWwiBH39+vXJM0Sdn//854Nzl7x/ez2PP/74YI+u
        EnRKEHSyiRD0n/zkJ8kzRJ36We8bN24s+lOJLt9Q5jmCTgmCTjYRgn7BBRckzxB53vWudyX/97Zm/vz5
        za9+dwk6JQg62UQIeunXYvdxli1b1vzqd5egU4Kgk02EoB9++OHJM5h8c/PNNze/+t0l6JQg6GQTIejj
        xo1LnqGNmTlzZi//heLhhx9ufvW7S9ApQdDJputBr59pndq/rTn11FOru+66qxo1alTyn0ecMWPGVNu2
        bWu+At0l6JQg6GTT9aD/4he/SO7f1lx88cWDPeqbrKT+ecQ54ogjBmfuOkGnBEEnm64H/eqrr07u39bc
        eOONgz3qX8dDDz00+THRZsGCBYMzd52gU4Kgk03Xg37uuecm929r6h+3P+f2228fvN1p6uMizUUXXdSc
        uNsEnRIEnWy6HvR58+Yl929rnv+2pmeeeWby4yJNfSOfCASdEgSdbLoe9MMOOyy5fxtTv33o89V3cKvf
        RCX18VHm97//fXPabhN0ShB0sul60Hfbbbfk/m3Mm970pmaL7d10003Jj48w9TPcowRP0ClB0Mmmy0Hf
        sGFDcve2ZtasWc0m/+3EE09Mfk7XZ/Lkyc0Ju0/QKUHQyabLQf/tb3+b3L2tWbhwYbPJf3vkkUcG382m
        Pq/LM2fOnOaE3SfolCDoZNPloJd+l7Xzzz+/2SStfjZ46vO6PKeddlpzuu4TdEoQdLLpctCvvPLK5O5t
        zRVXXNFskrZly5bBj6hTn9vVueSSS5rTdZ+gU4Kgk02Xg75kyZLk7m3Nj370o2aTF7Zq1ark53Z1VqxY
        0Zys+wSdEgSdbLoc9Po+6qnd25pf/vKXzSYvbu7cucnP7+KsWbOmOVX3CTolCDrZdDnopZ9J/sADDzSb
        vLj6CXK77rpr8jG6Nk888URzqu4TdEoQdLLpctDrNwlJ7d7WPPnkk80mL+0LX/hC8jG6NGPHjm1OE4Og
        U4Kgk02Xg77PPvskd29j6rdLfTl/8D/zzDPVxIkTk4/VlXmhG+l0laBTgqCTTVeDvnXr1mqnnXZK7t7G
        7LXXXs0m/7v6CWWpx+rKvPOd72xOEoOgU4Kgk01Xg/74448n925rDj744GaTl2fGjBnJx+vCLFq0qDlF
        DIJOCYJONl0N+rp165J7tzV1DHZE/SzxESNGJB9zuM/nPve55hQxCDolCDrZdDXod9xxR3LvtuaV/Pp8
        8IMfTD7mcJ/ly5c3J4hB0ClB0Mmmq0FfuXJlcu+25r3vfW+zycv3pz/9qZP3eb/hhhuaE8Qg6JQg6GTT
        1aDfeOONyb3bmg996EPNJjum9F3udmRWr17dbB+DoFOCoJNNV4N+1VVXJfdua04//fRmkx2zadOmwTPl
        U489XOfee+9tto9B0ClB0Mmmq0G/7LLLknu3NZ/85CebTXbcpZdemnzs4Trr169vNo9B0ClB0Mmmq0Ev
        /SPrxYsXN5vsuPpmM3vvvXfy8YfjbNy4sdk8BkGnBEEnm64G/VOf+lRy77bm3HPPbTZ5Zb7yla8kH3+4
        TX0Tn2gEnRIEnWy6GvSPfvSjyb3bms9//vPNJq/MP//5z2q//fZLXmM4zYQJE5qN4xB0ShB0sulq0E8+
        +eTk3m3NF7/4xWaTV+7yyy9PXmM4zetf//pm2zgEnRIEnWy6GvR3v/vdyb3bmmXLljWbvHKbN2+u9t9/
        /+R1hsvs6K1uhzNBpwRBJ5uuBn327NnJvduaoQx67f/+7/+S1xkuM2XKlGbTOASdEgSdbLoa9Hq/1N5t
        zdKlS5tNhkb9DPLdd989ea3hMG9/+9ubTeMQdEoQdLLpatCnT5+e3LutOe+885pNhk79zPnUtYbD1O8S
        F42gU4Kgk01Xgz5t2rTk3m3NWWed1WwydOq3hN15552T1ys9xxxzTLNlHIJOCYJONr5D37F5pbd+fSGn
        nHJK8nqlR9BhaAg62XQ16DNnzkzu3dYsWrSo2WRo3X///dXIkSOT1yw5gg5DQ9DJxpPidmwWLFjQbDL0
        3vOe9ySvWXIEHYaGoJNNV4N+wgknJPdua0488cRmk6G3atWq5DVLTv0TkWgEnRIEnWy6GvT58+cn925r
        jjrqqGaTPA455JDkdUtN/STEaASdEgSdbLoa9NL3cj/ooIOaTfL46le/mrxuqTn88MObzeIQdEoQdLLp
        atBLv9va+PHjm03yePrpp6uxY8cmr11iDj300GazOASdEgSdbLoa9C996UvJvducLVu2NNvkceqppyav
        W2Le8IY3NFvFIeiUIOhk09WgX3vttcm925z6RjA5rV27NnndErPnnns2W8Uh6JQg6GTT1aAPh2eCr1mz
        ptkmn6OPPjp57bZn9OjRzUZxCDolCDrZdDXoDz30UHLvNuf6669vtsnnmmuuSV67xGzatKnZKgZBpwRB
        J5uuBn3r1q3VLrvskty9rRnqt1BNqSO62267Ja/f9qxfv77ZKgZBpwRBJ5uuBr32lre8Jbl7W5Pr9q/P
        95GPfCR5/bbn7rvvbjaKQdApQdDJpstBr2+/mtq9rTn22GObTfK67bbbktdve2655ZZmoxgEnRIEnWy6
        HPTly5cnd29r2nwp14EHHpjcoc25+uqrm21iEHRKEHSy6XLQH3zwweTubc2oUaOqbdu2NdvkdcEFFyR3
        aHPqHSIRdEoQdLLpctBrkyZNSu7f1vz5z39uNsnrj3/8Y/G3Vf34xz/ebBODoFOCoJNN14NeRya1f1uz
        cuXKZpP86r+zT+3Q1syePbvZJAZBpwRBJ5uuB730E8YuuuiiZpP8li5dmtyhrTn44IObTWIQdEoQdLLp
        etBrb3zjG5NnaGPqd31ry80335zcoa2p7xZXv/4/CkGnBEEnmwhBv+GGG5JnaGOOO+64Zov86hu7pHZo
        cx5++OFmm+4TdEoQdLKJEPTa8ccfnzxH7pk5c2azQTvql8ql9mhrIr0WXdApQdDJJkrQn3jiiWrixInJ
        s+ScNr9Dr51++unJPdqar33ta80m3SfolCDoZBMl6LUHHnig9e9gFy9e3Fy9HfV3yKk92ppTTjml2aT7
        BJ0SBJ1sIgW9tmHDhsHuqTPlmJ/97GfNldtRf70mTJiQ3KWNmTp1arNJ9wk6JQg62UQLeq3+A/m6666r
        Jk+enDzbUM1b3/rWIn/4n3POOcl92pi99tqr2aL7BJ0SBJ1sIgb9P61evXrwY+LXvva1yXPu6IwdO7a6
        8847m6u067HHHiv2lqojRoyonn322WaTbhN0ShB0soke9OfU91y//fbbqyVLlgzONmbMmOS5/5fZd999
        B/+iUNKll16a3K2N2bx5c7NFtwk6JQg62fQl6M9Xf5e5du3a6tvf/vbgmePHHHNMteeeeyZ/Leqp34hl
        +vTpg5D+4x//aB6lnDo673vf+5K75pz6fvJtvSFNboJOCYJONn0N+gvZuHFjdc8991S33nprtWrVqsF/
        1u/qNhy/K33mmWeqOXPmJL9+uSbS7V8FnRIEnWwEvdvqW7GeffbZrb0TW9sv08tJ0ClB0MlG0GO44447
        qlmzZiW/lkM19RML65cFRiHolCDoZCPosaxbt27wXfQBBxyQ/Lru6NQvV/v1r3/dXCUGQacEQScbQY+p
        jlL9XfuFF144uM99/TK71Nf5pWannXaq5s2bVz366KPNI8ch6JQg6GQj6P2wZcuWwcv2vvGNb1SnnXZa
        ddJJJw3u+jZp0qRqjz32qMaPHz/4z/q/z5gxo1q4cGH19a9/PWTInyPolCDoZCPo9JWgU4Kgk42g01eC
        TgmCTjaCTl8JOiUIOtkIOn0l6JQg6GQj6PSVoFOCoJONoNNXgk4Jgk42gk5fCTolCDrZCDp9JeiUIOhk
        I+j0laBTgqCTjaDTV4JOCYJONoJOXwk6JQg62Qg6fSXolCDoZCPo9JWgU4Kgk42g01eCTgmCTjaCTl8J
        OiUIOtkIOn0l6JQg6GQj6PSVoFOCoJONoNNXgk4Jgk42gk5fCTolCDrZCDp9JeiUIOhkI+j0laBTgqCT
        jaDTV4JOCYJONoJOXwk6JQg62Qg6fSXolCDoZCPo9JWgU4Kgk42g01eCTgmCTjaCTl8JOiUIOtkIOn0l
        6JQg6GQj6PSVoFOCoJONoNNXgk4Jgk42gk5fCTolCDrZCDp9JeiUIOhkI+j0laBTgqCTjaDTV4JOCYJO
        NoJOXwk6JQg62Qg6fSXolCDoZPNCQR83blw1bdo0Y8LOmDFjkr/3BZ2cBJ1sXijoxvR1BJ2cBJ1sBN2Y
        7UfQyUnQyUbQjdl+BJ2cBJ1sBN2Y7UfQyUnQyUbQjdl+BJ2cBB0AAhB0AAhA0AEgAEEHgAAEHQACEHQA
        CEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeA
        AAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAI
        QNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AA
        BB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA
        0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAE
        HQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQ
        ASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQd
        AAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNAB
        IABBB4AABB0AAhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0A
        AhB0AAhA0AEgAEEHgAAEHQACEHQACEDQASAAQQeAAAQdAAIQdAAIQNABIABBB4AABB0AAhB0AAhA0AEg
        AEEHgAAEHQACEHQACEDQASAAQQeAzquq/we0vWTCLn25mAAAAABJRU5ErkJggg==
</value>
  </data>
</root>